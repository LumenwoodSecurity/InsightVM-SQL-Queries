WITH asset_vulnerabilities AS (
    SELECT
        da.asset_id,
        COUNT(dv.vulnerability_id) AS vulnerability_count,
        COUNT(CASE WHEN dv.exploits <> 0 THEN 1 END) AS vulnerabilities_with_known_exploits
    FROM
        dim_asset da
        JOIN fact_asset_vulnerability_instance fav USING(asset_id)
        JOIN dim_vulnerability dv USING(vulnerability_id)
    WHERE
        fav.date >= (CURRENT_DATE - INTERVAL '30 days')
    GROUP BY
        da.asset_id
),
cert_expiration_dates AS (
    SELECT
        DISTINCT asset_id,
        service_id,
        name,
        value
    FROM
        dim_asset_service_configuration
    WHERE
        lower(name) LIKE '%ssl.cert.not.valid.after'
),
asset_tags AS (
    SELECT
        dt.tag_name AS "Tag Name",
        dt.tag_type AS "Tag Type",
        COUNT(DISTINCT dta.asset_id) AS "Total Assets",
        SUM(CASE WHEN CURRENT_TIMESTAMP - cast(ced.value AS DATE) <= INTERVAL '30 days' THEN 1 ELSE 0 END) AS "Assets with Expired SSL Certificates",
        SUM(fa.riskscore) AS "Total Risk Score",
        AVG(fa.riskscore) AS "Average Risk Score per Asset",
        SUM(av.vulnerability_count) AS "Total Vulnerabilities",
        AVG(av.vulnerability_count) AS "Average Vulnerabilities per Asset",
        SUM(av.vulnerabilities_with_known_exploits) AS "Assets with Vulnerabilities with Known Exploits"
    FROM
        dim_tag dt
        JOIN dim_tag_asset dta USING(tag_id)
        JOIN fact_asset fa USING(asset_id)
        LEFT JOIN asset_vulnerabilities av USING(asset_id)
        LEFT JOIN cert_expiration_dates ced USING(asset_id)
    WHERE
        dt.tag_id = :tag_id
    GROUP BY
        dt.tag_name,
        dt.tag_type
)
SELECT * FROM asset_tags
ORDER BY
    "Total Risk Score" DESC;
------------------------------------------------------Works but indiscrepency with risk score -------------------------------------------
WITH asset_vulnerabilities AS (
    SELECT
        fav.asset_id,
        COUNT(dv.vulnerability_id) AS vulnerability_count,
        COUNT(CASE WHEN dv.exploits <> 0 THEN 1 END) AS vulnerabilities_with_known_exploits
    FROM
        fact_asset_vulnerability_instance fav
        JOIN dim_vulnerability dv USING(vulnerability_id)
    WHERE
        fav.date >= (CURRENT_DATE - INTERVAL '30 days')
    GROUP BY
        fav.asset_id
),
cert_expiration_dates AS (
    SELECT
        DISTINCT asset_id
    FROM
        dim_asset_service_configuration
    WHERE
        lower(name) LIKE '%ssl.cert.not.valid.after'
        AND CURRENT_TIMESTAMP - cast(value AS DATE) <= INTERVAL '30 days'
),
tag_assets AS (
    SELECT
        DISTINCT dta.asset_id
    FROM
        dim_tag dt
        JOIN dim_tag_asset dta USING(tag_id)
    WHERE
        dt.tag_id = :tag_id
)
SELECT
    dt.tag_name AS "Tag Name",
    dt.tag_type AS "Tag Type",
    COUNT(DISTINCT ta.asset_id) AS "Total Assets",
    COUNT(DISTINCT ced.asset_id) AS "Assets with Expired SSL Certificates",
    SUM(fa.riskscore) AS "Total Risk Score",
    AVG(fa.riskscore) AS "Average Risk Score per Asset",
    SUM(av.vulnerability_count) AS "Total Vulnerabilities",
    AVG(av.vulnerability_count) AS "Average Vulnerabilities per Asset",
    SUM(av.vulnerabilities_with_known_exploits) AS "Assets with Vulnerabilities with Known Exploits"
FROM
    dim_tag dt
    JOIN tag_assets ta ON dt.tag_id = :tag_id
    LEFT JOIN fact_asset fa ON ta.asset_id = fa.asset_id
    LEFT JOIN asset_vulnerabilities av ON ta.asset_id = av.asset_id
    LEFT JOIN cert_expiration_dates ced ON ta.asset_id = ced.asset_id
WHERE
    dt.tag_id = :tag_id
GROUP BY
    dt.tag_name,
    dt.tag_type
ORDER BY
    "Total Risk Score" DESC;
-----------------------------------------------Works-------------------------------
WITH tag_assets AS (
    SELECT
        DISTINCT dta.asset_id
    FROM
        dim_tag dt
        JOIN dim_tag_asset dta USING(tag_id)
    WHERE
        dt.tag_id = :tag_id
),
asset_vulnerabilities AS (
    SELECT
        fav.asset_id,
        COUNT(dv.vulnerability_id) AS vulnerability_count
    FROM
        fact_asset_vulnerability_instance fav
        JOIN dim_vulnerability dv USING(vulnerability_id)
        JOIN tag_assets ta ON fav.asset_id = ta.asset_id
    WHERE
        fav.date >= (CURRENT_DATE - INTERVAL '30 days')
    GROUP BY
        fav.asset_id
),
cert_expiration_dates AS (
    SELECT
        DISTINCT asset_id
    FROM
        dim_asset_service_configuration
    WHERE
        lower(name) LIKE '%ssl.cert.not.valid.after'
        AND CURRENT_TIMESTAMP - cast(value AS DATE) <= INTERVAL '30 days'
)
SELECT
    dt.tag_name AS "Tag Name",
    dt.tag_type AS "Tag Type",
    COUNT(DISTINCT ta.asset_id) AS "Total Assets",
    COUNT(DISTINCT ced.asset_id) AS "Assets with Expired SSL Certificates",
    SUM(fa.riskscore) AS "Total Risk Score",
    AVG(fa.riskscore) AS "Average Risk Score per Asset",
    SUM(av.vulnerability_count) AS "Total Vulnerabilities",
    AVG(av.vulnerability_count) AS "Average Vulnerabilities per Asset",
    SUM(CASE WHEN dv.exploits <> 0 THEN 1 ELSE 0 END) AS "Assets with Vulnerabilities with Known Exploits"
FROM
    dim_tag dt
    JOIN tag_assets ta ON dt.tag_id = :tag_id
    LEFT JOIN fact_asset fa ON ta.asset_id = fa.asset_id
    LEFT JOIN asset_vulnerabilities av ON ta.asset_id = av.asset_id
    LEFT JOIN cert_expiration_dates ced ON ta.asset_id = ced.asset_id
    LEFT JOIN fact_asset_vulnerability_instance fav ON ta.asset_id = fav.asset_id
    LEFT JOIN dim_vulnerability dv ON fav.vulnerability_id = dv.vulnerability_id
WHERE
    dt.tag_id = :tag_id
    AND fav.date >= (CURRENT_DATE - INTERVAL '30 days')
GROUP BY
    dt.tag_name,
    dt.tag_type
ORDER BY
    "Total Risk Score" DESC;
------------------------------------------------------------------------------------------------------------
WITH asset_vulnerabilities AS (
    SELECT
        fav.asset_id,
        COUNT(dv.vulnerability_id) AS vulnerability_count
    FROM
        fact_asset_vulnerability_instance fav
        JOIN dim_vulnerability dv USING(vulnerability_id)
    WHERE
        fav.date >= (CURRENT_DATE - INTERVAL '30 days')
    GROUP BY
        fav.asset_id
),
cert_expiration_dates AS (
    SELECT
        DISTINCT asset_id
    FROM
        dim_asset_service_configuration
    WHERE
        lower(name) LIKE '%ssl.cert.not.valid.after'
        AND CURRENT_TIMESTAMP - cast(value AS DATE) <= INTERVAL '30 days'
)
SELECT
    dt.tag_name AS "Tag Name",
    dt.tag_type AS "Tag Type",
    COUNT(DISTINCT dta.asset_id) AS "Total Assets",
    COUNT(DISTINCT ced.asset_id) AS "Assets with Expired SSL Certificates",
    SUM(fa.riskscore) AS "Total Risk Score",
    AVG(fa.riskscore) AS "Average Risk Score per Asset",
    SUM(av.vulnerability_count) AS "Total Vulnerabilities",
    AVG(av.vulnerability_count) AS "Average Vulnerabilities per Asset"
FROM
    dim_tag dt
    JOIN dim_tag_asset dta USING(tag_id)
    JOIN fact_asset fa USING(asset_id)
    LEFT JOIN asset_vulnerabilities av ON fa.asset_id = av.asset_id
    LEFT JOIN cert_expiration_dates ced ON fa.asset_id = ced.asset_id
WHERE
    dt.tag_id = :tag_id
GROUP BY
    dt.tag_name,
    dt.tag_type
ORDER BY
    "Total Risk Score" DESC;

